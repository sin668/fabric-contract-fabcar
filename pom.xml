<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2016-2017 Red Hat, Inc, and individual contributors.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.ycp.example</groupId>
  <artifactId>fabcar</artifactId>
  <version>2.3.2-2-SNAPSHOT</version>
  <name>Fabric Contract - Java Example</name>
  <description>Fabric Contract - Java Example</description>
  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <!-- Generic properties -->
    <java.version>1.8</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- Logging -->
    <logback.version>1.2.0</logback.version>
    <slf4j.version>1.7.5</slf4j.version>

    <!-- Test -->
    <junit.jupiter.version>5.3.0-RC1</junit.jupiter.version>
    <junit.platform.version>1.3.0-RC1</junit.platform.version>

    <!-- fabric-chaincode-java -->
    <fabric-chaincode-java.version>2.4.1</fabric-chaincode-java.version>
    <jkube.build.switchToDeployment>true</jkube.build.switchToDeployment>
    <ubi.version>1.3</ubi.version>
    <fabric.package.id>
      fabcar:bc5cdd1b2350ffae367122f8ff32533052936ba18cef037c3517aace36131e1a
    </fabric.package.id>
    <jkube.generator.from>
      registry.access.redhat.com/ubi8/openjdk-8:${ubi.version}
    </jkube.generator.from>
    <jkube.namespace>hlf-operator</jkube.namespace>
  </properties>
  
  <repositories>
    <repository>
        <id>jitpack.io</id>
        <url>https://www.jitpack.io</url>
    </repository>
    <repository>
        <id>artifactory</id>
        <url>https://hyperledger.jfrog.io/hyperledger/fabric-maven</url>
    </repository>
  </repositories>

  <dependencies>
    <!-- fabric-chaincode-java -->
    <dependency>
        <groupId>org.hyperledger.fabric-chaincode-java</groupId>
        <artifactId>fabric-chaincode-shim</artifactId>
        <version>${fabric-chaincode-java.version}</version>
        <scope>compile</scope>
    </dependency>

    <dependency>
        <groupId>org.hyperledger.fabric-chaincode-java</groupId>
        <artifactId>fabric-chaincode-protos</artifactId>
        <version>${fabric-chaincode-java.version}</version>
        <scope>compile</scope>
    </dependency>

    <!-- fabric-sdk-java -->
    
    <!-- Logging with SLF4J & LogBack -->
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
        <scope>runtime</scope>
    </dependency>

    <!-- Test Artifacts -->
    <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit.jupiter.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-params</artifactId>
        <version>${junit.jupiter.version}</version>
        <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit.jupiter.version}</version>
        <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
    <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>2.10.0</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.json/json -->
    <dependency>
        <groupId>com.owlike</groupId>
        <artifactId>genson</artifactId>
        <version>1.5</version>
    </dependency>
  </dependencies>
  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.22.0</version>
        </plugin>
        <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.1</version>
            <configuration>
                <source>${java.version}</source>
                <target>${java.version}</target>
            </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
        <execution>
            <phase>package</phase>
            <goals>
                <goal>shade</goal>
            </goals>
            <configuration>
                <finalName>${project.artifactId}-${project.version}</finalName>
                <transformers>
                    <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                        <mainClass>org.hyperledger.fabric.contract.ContractRouter</mainClass>
                    </transformer>
                </transformers>
                <filters>
                    <filter>
                        <!-- filter out signature files from signed dependencies, else repackaging fails with security ex -->
                        <artifact>*:*</artifact>
                        <excludes>
                            <exclude>META-INF/*.SF</exclude>
                            <exclude>META-INF/*.DSA</exclude>
                            <exclude>META-INF/*.RSA</exclude>
                        </excludes>
                    </filter>
                    </filters>
                </configuration>
            </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>openshift-it</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <systemPropertyVariables>
                <app.name>${project.artifactId}</app.name>
              </systemPropertyVariables>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>openshift</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.eclipse.jkube</groupId>
            <artifactId>openshift-maven-plugin</artifactId>
            <version>1.16.2</version>
            <executions>
              <execution>
                <id>fmp</id>
                <goals>
                  <goal>resource</goal>
                  <goal>build</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
                <!--verbose>true</verbose-->
                <images>
                    <image>
                        <name>${project.artifactId}:${project.version}</name>
                        <build>
                            <dockerFile>${project.basedir}/src/main/docker/Dockerfile</dockerFile>
                            <assembly>
                                <mode>dir</mode>
                                <layers>
                                    <layer>
                                        <id>assembly</id>
                                        <fileSets>
                                            <fileSet>
                                                <directory>src/main/resources</directory>
                                                <outputDirectory>conf</outputDirectory>
                                                <includes>
                                                    <include>*.json</include>
                                                    <include>**/*.key</include>
                                                    <include>**/*.pem</include>
                                                    <include>**/*.crt</include>
                                                </includes>
                                            </fileSet>
                                        </fileSets>
                                    </layer>
                                </layers>
                            </assembly>
                            <tags>
                                <tag>latest</tag>
                                <tag>${project.version}</tag>
                            </tags>
                        </build>
                    </image>
                </images>
              <resources>
                <labels>
                  <all>
                    <property>
                      <name>app.kubernetes.io/part-of</name>
                      <value>http-api-example</value>
                    </property>
                    <property>
                      <name>app.kubernetes.io/name</name>
                      <value>http-api</value>
                    </property>
                    <property>
                      <name>app.kubernetes.io/component</name>
                      <value>frontend</value>
                    </property>
                    <property>
                      <name>app.openshift.io/runtime</name>
                      <value>rh-spring-boot</value>
                    </property>
                    <property>
                      <name>app.openshift.io/runtime-version</name>
                      <value>${spring-boot.version}</value>
                    </property>
                  </all>
                </labels>
                <annotations>
                  <all>
                    <property>
                      <name>app.kubernetes.io/vcs-uri</name>
                      <value>git@github.com:snowdrop/rest-http-example.git</value>
                    </property>
                  </all>
                </annotations>
              </resources>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
